from unittest import result
import numpy as np
import random
import time

def draw(list:list)->int:
    x=random.randint(0,36)
    list.append(x)
    return x

def prev_numbers(list:list,step:int)->str: # returns drawn number where step is number of draw
    try:
        x=list[::-1]
        x=x[step-1]
    except:
        x='--'
    return x

def enter_prize(x:str)->int:
    if x=='coin5':
        enter=5
    elif x=='coin10':
        enter=10
    elif x=='coin25':
        enter=25
    elif x=='coin50':
        enter=50
    elif x=='coin100':
        enter=100
    return enter

def single_bet(position:str, x:str, list:list)->dict: # returns dictionary with single bet
    return {f'{position}':enter_prize(x)}

def bet_position(list:list)->dict: # returns overall bet on single position
    dictionary={}
    for single_dict in list:
        for key, value in single_dict.items():
            if key in dictionary:
                dictionary[key]+=value
            else:
                dictionary[key]=value
    return dictionary

def overall_bet(dict:dict)->str:
    list=[]
    for key, value in dict.items():
        list.append(int(value))
    all=str(sum(list))
    return all

def draw_result(x:int)->list:
    match x:
        case 0: return ['spiel', 'n26', 'n0', 'n32', 'n15', 'n3', 'o_0_', 'd_0_1_', 'd_0_2_', 'd_0_3_', 't_0_1_2_', 't_0_2_3_', 'q_0_1_2_3_']
        case 1: return ['orphelins', 'n16', 'n33', 'n1', 'n20', 'n14', 'o_1_', 'd_0_1_', 'd_1_4_', 'd_1_2_', 't_0_1_2_', 'q_0_1_2_3_', 't_1_2_3_', 'q_1_2_4_5_', 's_1_2_3_4_5_6_', 'doz_1_12_', 'col_1_34_', 'red']
        case 2: return ['serie023', 'n4', 'n21', 'n2', 'n25', 'n17', 'o_2_', 'd_0_2_', 'd_2_5_', 'd_1_2_', 'd_2_3_', 't_0_1_2_', 't_0_2_3_', 'q_0_1_2_3_', 't_1_2_3_', 'q_1_2_4_5_', 'q_2_3_5_6_', 's_1_2_3_4_5_6_', 'col_2_35_', 'doz_1_12_', 'black']
        case 3: return ['spiel', 'n26', 'n0', 'n12', 'n35', 'n3', 'o_3_', 'd_0_3_', 'd_3_6_', 'd_2_3_', 't_0_2_3_', 'q_0_1_2_3_', 't_1_2_3_', 'q_2_3_5_6_', 's_1_2_3_4_5_6_', 'col_3_36_', 'doz_1_12_', 'red']
        case 4: return ['serie023', 'n15', 'n19', 'n4', 'n21', 'n2', 'o_4_', 'd_1_4_', 'd_4_7_', 'd_4_5_', 't_4_5_6_', 'q_1_2_4_5_', 'q_4_5_7_8_', 's_1_2_3_4_5_6_', 's_4_5_6_7_8_9_', 'doz_1_12_', 'col_1_34_', 'black']
        case 5: return ['serie58', 'n23', 'n10', 'n5', 'n24', 'n16', 'o_5_', 'd_2_5_', 'd_5_8_', 'd_4_5_', 'd_5_6_', 't_4_5_6_', 'q_1_2_4_5_', 'q_2_3_5_6_', 'q_4_5_7_8_', 'q_5_6_8_9_', 's_1_2_3_4_5_6_', 's_4_5_6_7_8_9_', 'doz_1_12_', 'col_2_35_', 'red']
        case 6: return ['orphelins', 'n17', 'n34', 'n6', 'n27', 'n13', 'o_6_', 'd_3_6_', 'd_6_9_', 'd_5_6_', 't_4_5_6_', 'q_2_3_5_6_', 'q_5_6_8_9_', 's_1_2_3_4_5_6_', 's_4_5_6_7_8_9_', 'doz_1_12_', 'col_3_36_', 'black']
        case 7: return ['serie023', 'n18', 'n29', 'n7', 'n28', 'n12', 'o_7_', 'd_4_7_', 'd_7_10_', 'd_7_8_', 't_7_8_9_', 'q_4_5_7_8_', 'q_7_8_10_11_', 's_4_5_6_7_8_9_', 's_7_8_9_10_11_12_', 'doz_1_12_', 'col_1_34_', 'red']
        case 8: return ['serie58', 'n11', 'n30', 'n8', 'n23', 'n10', 'o_8_', 'd_5_8_', 'd_8_11_', 'd_7_8_', 'd_8_9_', 't_7_8_9_', 'q_4_5_7_8_', 'q_5_6_8_9_', 'q_7_8_10_11_', 'q_8_9_11_12_', 's_4_5_6_7_8_9_', 's_7_8_9_10_11_12_', 'doz_1_12_', 'col_2_35_', 'black']
        case 9: return ['orphelins', 'n14', 'n31', 'n9', 'n22', 'n18', 'o_9_', 'd_6_9_', 'd_9_12_', 'd_8_9_', 't_7_8_9_', 'q_5_6_8_9_', 'q_8_9_11_12_', 's_4_5_6_7_8_9_', 's_7_8_9_10_11_12_', 'doz_1_12_', 'col_3_36_', 'red']
        case 10: return ['serie58', 'n8', 'n23', 'n10', 'n5', 'n24', 'o_10_', 'd_7_10_', 'd_10_13_', 'd_10_11_', 't_10_11_12_', 'q_7_8_10_11_', 'q_10_11_13_14_', 's_7_8_9_10_11_12_', 's_10_11_12_13_14_15_', 'doz_1_12_', 'col_1_34_', 'black']
        case 11: return ['serie58', 'n13', 'n36', 'n11', 'n30', 'n8', 'o_11_', 'd_8_11_', 'd_11_14_', 'd_10_11_', 'd_11_12_', 't_10_11_12_', 'q_7_8_10_11_', 'q_8_9_11_12_', 'q_10_11_13_14_', 'q_11_12_14_15_', 's_7_8_9_10_11_12_', 's_10_11_12_13_14_15_', 'doz_1_12_', 'col_2_35_', 'black']
        case 12: return ['spiel', 'n7', 'n28', 'n12', 'n35', 'n3', 'o_12_', 'd_9_12_', 'd_12_15_', 'd_11_12_', 't_10_11_12_', 'q_8_9_11_12_', 'q_11_12_14_15_', 's_7_8_9_10_11_12_', 's_10_11_12_13_14_15_', 'doz_1_12_', 'col_3_36_', 'red']
        case 13: return ['serie58', 'n6', 'n27', 'n13', 'n36', 'n11', 'o_13_', 'd_10_13_', 'd_13_16_', 'd_13_14_', 't_13_14_15_', 'q_10_11_13_14_', 'q_13_14_16_17_', 's_10_11_12_13_14_15_', 's_13_14_15_16_17_18_', 'doz_13_24_', 'col_1_34_', 'black']
        case 14: return ['orphelins', 'n1', 'n20', 'n14', 'n31', 'n9', 'o_14_', 'd_11_14_', 'd_14_17_', 'd_13_14_', 'd_14_15_', 't_13_14_15_', 'q_10_11_13_14_', 'q_11_12_14_15_', 'q_13_14_16_17_', 'q_14_15_17_18_', 's_10_11_12_13_14_15_', 's_13_14_15_16_17_18_', 'doz_13_24_', 'col_2_35_', 'red']
        case 15: return ['spiel', 'n0', 'n32', 'n15', 'n19', 'n4', 'o_15_', 'd_12_15_', 'd_15_18_', 'd_14_15_', 't_13_14_15_', 'q_11_12_14_15_', 'q_14_15_17_18_', 's_10_11_12_13_14_15_', 's_13_14_15_16_17_18_', 'doz_13_24_', 'col_3_36_', 'black']
        case 16: return ['serie58', 'n5', 'n24', 'n16', 'n33', 'n1', 'o_16_', 'd_13_16_', 'd_16_19_', 'd_16_17_', 't_16_17_18_', 'q_13_14_16_17_', 'q_16_17_19_20_', 's_13_14_15_16_17_18_', 's_16_17_18_19_20_21_', 'doz_13_24_', 'col_1_34_', 'red']
        case 17: return ['orphelins', 'n2', 'n25', 'n17', 'n34', 'n6', 'o_17_', 'd_14_17_', 'd_17_20_', 'd_16_17_', 'd_17_18_', 't_16_17_18_', 'q_13_14_16_17_', 'q_14_15_17_18_', 'q_16_17_19_20_', 'q_17_18_20_21_', 's_13_14_15_16_17_18_', 's_16_17_18_19_20_21_', 'doz_13_24_', 'col_2_35_', 'black']
        case 18: return ['serie023', 'n9', 'n22', 'n18', 'n29', 'n7', 'o_18_', 'd_15_18_', 'd_18_21_', 'd_17_18_', 't_16_17_18_', 'q_14_15_17_18_', 'q_17_18_20_21_', 's_13_14_15_16_17_18_', 's_16_17_18_19_20_21_', 'doz_13_24_', 'col_3_36_', 'red']
        case 19: return ['serie023', 'n32', 'n15', 'n19', 'n4', 'n21', 'o_19_', 'd_16_19_', 'd_19_22_', 'd_19_20_', 't_19_20_21_', 'q_16_17_19_20_', 'q_19_20_22_23_', 's_16_17_18_19_20_21_', 's_19_20_21_22_23_24_', 'doz_13_24_', 'col_1_34_', 'red']
        case 20: return ['orphelins', 'n33', 'n1', 'n20', 'n14', 'n31', 'o_20_', 'd_17_20_', 'd_20_23_', 'd_19_20_', 'd_20_21_', 't_19_20_21_', 'q_16_17_19_20_', 'q_17_18_20_21_', 'q_19_20_22_23_', 'q_20_21_23_24_', 's_16_17_18_19_20_21_', 's_19_20_21_22_23_24_', 'doz_13_24_', 'col_2_35_', 'black']
        case 21: return ['serie023', 'n19', 'n4', 'n21', 'n2', 'n25', 'o_21_', 'd_18_21_', 'd_21_24_', 'd_20_21_', 't_19_20_21_', 'q_17_18_20_21_', 'q_20_21_23_24_', 's_16_17_18_19_20_21_', 's_19_20_21_22_23_24_', 'doz_13_24_', 'col_3_36_', 'red']
        case 22: return ['serie023', 'n31', 'n9', 'n22', 'n18', 'n29', 'o_22_', 'd_19_22_', 'd_22_25_', 'd_22_23_', 't_22_23_24_', 'q_19_20_22_23_', 'q_22_23_25_26_', 's_19_20_21_22_23_24_', 's_22_23_24_25_26_27_', 'doz_13_24_', 'col_1_34_', 'black']
        case 23: return ['serie58', 'n30', 'n8', 'n23', 'n10', 'n5', 'o_23_', 'd_20_23_', 'd_23_26_', 'd_22_23_', 'd_23_24_', 't_22_23_24_', 'q_19_20_22_23_', 'q_20_21_23_24_', 'q_22_23_25_26_', 'q_23_24_26_27_', 's_19_20_21_22_23_24_', 's_22_23_24_25_26_27_', 'doz_13_24_', 'col_2_35_', 'red']
        case 24: return ['serie58', 'n10', 'n5', 'n24', 'n16', 'n33', 'o_24_', 'd_21_24_', 'd_24_27_', 'd_23_24_', 't_22_23_24_', 'q_20_21_23_24_', 'q_23_24_26_27_', 's_19_20_21_22_23_24_', 's_22_23_24_25_26_27_', 'doz_13_24_', 'col_3_36_', 'black']
        case 25: return ['serie023', 'n21', 'n2', 'n25', 'n17', 'n34', 'o_25_', 'd_22_25_', 'd_25_28_', 'd_25_26_', 't_25_26_27_', 'q_22_23_25_26_', 'q_25_26_28_29_', 's_22_23_24_25_26_27_', 's_25_26_27_28_29_30_', 'doz_25_36_', 'col_1_34_', 'red']
        case 26: return ['spiel', 'n26', 'n0', 'n32', 'n35', 'n3', 'o_26_', 'd_23_26_', 'd_26_29_', 'd_25_26_', 'd_26_27_', 't_25_26_27_', 'q_22_23_25_26_', 'q_23_24_26_27_', 'q_25_26_28_29_', 'q_26_27_29_30_', 's_22_23_24_25_26_27_', 's_25_26_27_28_29_30_', 'doz_25_36_', 'col_2_35_', 'black']
        case 27: return ['serie58', 'n34', 'n6', 'n27', 'n13', 'n36', 'o_27_', 'd_24_27_', 'd_27_30_', 'd_26_27_', 't_25_26_27_', 'q_23_24_26_27_', 'q_26_27_29_30_', 's_22_23_24_25_26_27_', 's_25_26_27_28_29_30_', 'doz_25_36_', 'col_3_36_', 'red']
        case 28: return ['serie023', 'n29', 'n7', 'n28', 'n12', 'n35', 'o_28_', 'd_25_28_', 'd_28_31_', 'd_28_29_', 't_28_29_30_', 'q_25_26_28_29_', 'q_28_29_31_32_', 's_25_26_27_28_29_30_', 's_28_29_30_31_32_33_', 'doz_25_36_', 'col_1_34_', 'black']
        case 29: return ['serie023', 'n22', 'n18', 'n29', 'n7', 'n28', 'o_29_', 'd_26_29_', 'd_29_32_', 'd_28_29_', 'd_29_30_', 't_28_29_30_', 'q_25_26_28_29_', 'q_26_27_29_30_', 'q_28_29_31_32_', 'q_29_30_32_33_', 's_25_26_27_28_29_30_', 's_28_29_30_31_32_33_', 'doz_25_36_', 'col_2_35_', 'black']
        case 30: return ['serie58', 'n36', 'n11', 'n30', 'n8', 'n23', 'o_30_', 'd_27_30_', 'd_30_33_', 'd_29_30_', 't_28_29_30_', 'q_26_27_29_30_', 'q_29_30_32_33_', 's_25_26_27_28_29_30_', 's_28_29_30_31_32_33_', 'doz_25_36_', 'col_3_36_', 'red']
        case 31: return ['orphelins', 'n20', 'n14', 'n31', 'n9', 'n22', 'o_31_', 'd_28_31_', 'd_31_34_', 'd_31_32_', 't_31_32_33_', 'q_28_29_31_32_', 'q_31_32_34_35_', 's_28_29_30_31_32_33_', 's_31_32_33_34_35_36_', 'doz_25_36_', 'col_1_34_', 'black']
        case 32: return ['spiel', 'n26', 'n0', 'n32', 'n15', 'n19', 'o_32_', 'd_29_32_', 'd_32_35_', 'd_31_32_', 'd_32_33_', 't_31_32_33_', 'q_28_29_31_32_', 'q_29_30_32_33_', 'q_31_32_34_35_', 'q_32_33_35_36_', 's_28_29_30_31_32_33_', 's_31_32_33_34_35_36_', 'doz_25_36_', 'col_2_35_', 'red']
        case 33: return ['serie58', 'n24', 'n16', 'n33', 'n1', 'n20', 'o_33_', 'd_30_33_', 'd_33_36_', 'd_32_33_', 't_31_32_33_', 'q_29_30_32_33_', 'q_32_33_35_36_', 's_28_29_30_31_32_33_', 's_31_32_33_34_35_36_', 'doz_25_36_', 'col_3_36_', 'black']
        case 34: return ['orphelins', 'n25', 'n17', 'n34', 'n6', 'n27', 'o_34_', 'd_31_34_', 'd_34_35_', 't_34_35_36_', 'q_31_32_34_35_', 's_31_32_33_34_35_36_', 'doz_25_36_', 'col_1_34_', 'red']
        case 35: return ['spiel', 'n26', 'n28', 'n12', 'n35', 'n3', 'o_35_', 'd_32_35_', 'd_34_35_', 'd_35_36_', 't_34_35_36_', 'q_31_32_34_35_', 'q_32_33_35_36_', 's_31_32_33_34_35_36_', 'col_2_35_', 'doz_25_36_', 'black']
        case 36: return ['serie58', 'n27', 'n13', 'n36', 'n11', 'n30', 'o_36_', 'd_33_36_', 'd_35_36_', 't_34_35_36_', 'q_32_33_35_36_', 's_31_32_33_34_35_36_', 'doz_25_36_', 'col_3_36_', 'red']
        case _: return []

def bet_result(x:int, list:list, dict:dict)->int: # returns money won/lost in a single draw

    result={}
    for key, value in dict.items():
        if key in list:
            result[key]=value
    
    result2={}
    for key2, value2 in result.items():
        if str(key2).startswith('o') and len(str(key2))<4:
            result2[key2]=value2*36
        elif str(key2).startswith('d'):
            result2[key2]=value2*18
        elif str(key2).startswith('t'):
            result2[key2]=value2*12
        elif str(key2).startswith('q'):
            result2[key2]=value2*9
        elif str(key2).startswith(r'^s\d'):
            result2[key2]=value2*6
        elif str(key2).startswith('col') or str(key2).startswith('doz'):
            result2[key2]=value2*3
        elif str(key2).startswith('red') or str(key2).startswith('black'):
            result2[key2]=value2*2
        elif str(key2).startswith('n'):
            result2[key2]=value2*36
        elif str(key2).startswith('sp'):
            if x==26:
                result2[key2]=value2*36
            else:
                result2[key2]=value2*18
        elif str(key2).startswith('orp'):
            if x==1 or x==17:
                result2[key2]=value2*36
            else:
                result2[key2]=value2*18
        elif str(key2).startswith('serie023'):
            if x==25 or x==26 or x==28 or x==29:
                result2[key2]=value2*9
            elif x==0 or x==2 or x==3:
                result2[key2]=value2*12
            else:
                result2[key2]=value2*18
        elif str(key2).startswith('serie58'):
            result2[key2]=value2*18
        
    sum_values=int(sum(result2.values()))

    return sum_values

def balance(before:list, bet:int, prize:int)->list: # returns overall money owned by a player
    outcome=before[-1]+prize-bet
    before.append(outcome)
    return before

def chances(dict:dict)->str: # returns percentage of chances to win anything from a bet
    o0 = [0]
    o1 = [1]
    o2 = [2]
    o3 = [3]
    o4 = [4]
    o5 = [5]
    o6 = [6]
    o7 = [7]
    o8 = [8]
    o9 = [9]
    o10 = [10]
    o11 = [11]
    o12 = [12]
    o13 = [13]
    o14 = [14]
    o15 = [15]
    o16 = [16]
    o17 = [17]
    o18 = [18]
    o19 = [19]
    o20 = [20]
    o21 = [21]
    o22 = [22]
    o23 = [23]
    o24 = [24]
    o25 = [25]
    o26 = [26]
    o27 = [27]
    o28 = [28]
    o29 = [29]
    o30 = [30]
    o31 = [31]
    o32 = [32]
    o33 = [33]
    o34 = [34]
    o35 = [35]
    o36 = [36]
    d01 = [0,1]
    d02 = [0,2]
    d03 = [0,3]
    d14 = [1,4]
    d25 = [2,5]
    d36 = [3,6]
    d47 = [4,7]
    d58 = [5,8]
    d69 = [6,9]
    d710 = [7,10]
    d811 = [8,11]
    d912 = [9,12]
    d1013 = [10,13]
    d1114 = [11,14]
    d1215 = [12,15]
    d1316 = [13,16]
    d1417 = [14,17]
    d1518 = [15,18]
    d1619 = [16,19]
    d1720 = [17,20]
    d1821 = [18,21]
    d1922 = [19,22]
    d2023 = [20,23]
    d2124 = [21,24]
    d2225 = [22,25]
    d2326 = [23,26]
    d2427 = [24,27]
    d2528 = [25,28]
    d2629 = [26,29]
    d2730 = [27,30]
    d2831 = [28,31]
    d2932 = [29,32]
    d3033 = [30,33]
    d3134 = [31,34]
    d3235 = [32,35]
    d3336 = [33,36]
    d12 = [1,2]
    d23 = [2,3]
    d45 = [4,5]
    d56 = [5,6]
    d78 = [7,8]
    d89 = [8,9]
    d1011 = [10,11]
    d1112 = [11,12]
    d1314 = [13,14]
    d1415 = [14,15]
    d1617 = [16,17]
    d1718 = [17,18]
    d1920 = [19,20]
    d2021 = [20,21]
    d2223 = [22,23]
    d2324 = [23,24]
    d2526 = [25,26]
    d2627 = [26,27]
    d2829 = [28,29]
    d2930 = [29,30]
    d3132 = [31,32]
    d3233 = [32,33]
    d3435 = [34,35]
    d3536 = [35,36]
    t012 = [0,1,2]
    t023 = [0,2,3]
    q0123 = [0,1,2,3]
    t123 = [1,2,3]
    t456 = [4,5,6]
    t789 = [7,8,9]
    t101112 = [10,11,12]
    t131415 = [13,14,15]
    t161718 = [16,17,18]
    t192021 = [19,20,21]
    t222324 = [22,23,24]
    t252627 = [25,26,27]
    t282930 = [28,29,30]
    t313233 = [31,32,33]
    t343536 = [34,35,36]
    q1245 = [1,2,4,5]
    q2356 = [2,3,5,6]
    q4578 = [4,5,7,8]
    q5689 = [5,6,8,9]
    q781011 = [7,8,10,11]
    q891112 = [8,9,11,12]
    q10111314 = [10,11,13,14]
    q11121415 = [11,12,14,15]
    q13141617 = [13,14,16,17]
    q14151718 = [14,15,17,18]
    q16171920 = [16,17,19,20]
    q17182021 = [17,18,20,21]
    q19202223 = [19,20,22,23]
    q20212324 = [20,21,23,24]
    q22232526 = [22,23,25,26]
    q23242627 = [23,24,26,27]
    q25262829 = [25,26,28,29]
    q26272930 = [26,27,29,30]
    q28293132 = [28,29,31,32]
    q29303233 = [29,30,32,33]
    q31323435 = [31,32,34,35]
    q32333536 = [32,33,35,36]
    s123456 = [1,2,3,4,5,6]
    s456789 = [4,5,6,7,8,9]
    s789101112 = [7,8,9,10,11,12]
    s101112131415 = [10,11,12,13,14,15]
    s131415161718 = [13,14,15,16,17,18]
    s161718192021 = [16,17,18,19,20,21]
    s192021222324 = [19,20,21,22,23,24]
    s222324252627 = [22,23,24,25,26,27]
    s252627282930 = [25,26,27,28,29,30]
    s282930313233 = [28,29,30,31,32,33]
    s313233343536 = [31,32,33,34,35,36]
    doz112 = [1,2,3,4,5,6,7,8,9,10,11,12]
    doz1324 = [13,14,15,16,17,18,19,20,21,22,23,24]
    doz2536 = [25,26,27,28,29,30,31,32,33,34,35,36]
    col134 = [1,4,7,10,13,16,19,22,25,28,31,34]
    col235 = [2,5,8,11,14,17,20,23,26,29,32,35]
    col336 = [3,6,9,12,15,18,21,24,27,30,33,36]
    red = [1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36]
    black = [2,4,6,8,10,11,13,15,17,20,22,24,26,28,29,31,33,35]
    n26 = [32,0,26,3,35]
    n3 = [0,26,3,25,12]
    n35 = [26,3,35,12,28]
    n12 = [3,35,12,28,7]
    n28 = [35,12,28,7,29]
    n7 = [12,18,7,29,18]
    n29 = [28,7,29,18,22]
    n18 = [7,29,18,22,9]
    n22 = [29,18,22,9,31]
    n9 = [18,22,9,31,14]
    n31 = [22,9,31,14,20]
    n14 = [9,31,14,20,1]
    n20 = [31,14,20,1,33]
    n1 = [14,20,1,33,16]
    n33 = [20,1,33,16,24]
    n16 = [1,33,16,24,5]
    n24 = [33,16,24,5,10]
    n5 = [16,24,5,10,23]
    n10 = [24,5,10,23,8]
    n23 = [5,10,23,8,30]
    n0 = [3,26,0,32,15]
    n32 = [26,0,32,15,19]
    n15 = [0,32,15,19,4]
    n19 = [32,15,19,4,21]
    n4 = [15,19,4,21,2]
    n21 = [19,4,21,2,25]
    n2 = [4,21,2,25,17]
    n25 = [21,2,25,17,34]
    n17 = [2,25,17,34,6]
    n34 = [25,17,34,6,27]
    n6 = [17,34,6,27,13]
    n27 = [34,6,27,13,36]
    n13 = [6,27,13,36,11]
    n36 = [27,13,36,11,30]
    n11 = [13,36,11,30,8]
    n30 = [36,11,30,8,23]
    n8 = [11,30,8,23,10]
    spiel = [15,32,0,26,3,35,12]
    serie023 = [28,7,29,18,22,25,2,21,4,19]
    orphelins = [9,31,14,20,1,6,34,17]
    serie58 = [33,16,24,5,10,23,8,30,11,36,13,27]

    

#  TODO concat lists that are on the bet, keep only numbers that does not repeat and calculate chances, make it after every bet

# lista=[{'d36':5}, {'s25':10}, {'t123':10}, {'d36':10}, {'d36':25}, {'t123': 25}]
# print(bet_position(lista))